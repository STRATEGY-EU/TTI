---
version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.2.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092" # inside container
      - "9092:9092" # for localhost
      - "3501:3501" # for external services
      - "9101:9101" # for Kafka-UI
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: LISTENER_BOB://${BROKER},LISTENER_FRED://broker:9092,LISTENER_ALICE://broker:3501
      KAFKA_ADVERTISED_LISTENERS: LISTENER_BOB://${BROKER},LISTENER_FRED://localhost:9092,LISTENER_ALICE://${HOST}:3501
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_BOB:PLAINTEXT,LISTENER_FRED:PLAINTEXT,LISTENER_ALICE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_BOB
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: broker
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=broker -Dcom.sun.management.jmxremote.rmi.port=9101

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "3502:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "${BROKER}"
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  # For inspecting KAFKA

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 3600:8080
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${BROKER}
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9101
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: ${SCHEMA}
      # KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      # KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect0:8083

  bootstrapper:
    container_name: osint_bootstrapper
    image: drivereu/silent-producer:latest
    hostname: bootstrapper
    depends_on:
      - broker
      - schema-registry
    environment:
      SLEEP: 20000 # Wait before registering schemas
      KAFKA_HOST: ${BROKER}
      SCHEMA_REGISTRY: ${SCHEMA}
      PARTITION_SPECIFICATION: system_heartbeat:1:360000
    restart: on-failure
    volumes:
      - ./schemas:/app/src/schemas

  trial_management_tool:
    profiles: ["tmt"]
    image: strategyeu/trial-management-tool:naas
    depends_on:
      - broker
      - schema-registry
      - bootstrapper
    links:
      - broker
      - schema-registry
    ports:
      - "3210:3210"
    environment:
      CLIENT_ID: TB-TrialMgmt
      KAFKA_HOST: ${BROKER}
      SCHEMA_REGISTRY: ${SCHEMA}
      TRIAL_MANAGER_SERVER_PORT: 3210
      SERVER: http://localhost/tmt
      PRODUCE: system_request_change_of_trial_stage,system_tm_phase_message,system_tm_role_player,simulation_session_mgmt,standard_cap,simulation_entity_post,named_json,simulation_request_startinject,cbrn_geojson,chemical_incident,resource,simulation_entity_featurecollection
    volumes:
      - trial-data:/app/trials

  time_service:
    profiles: ["tmt"]
    image: drivereu/test-bed-time-service:latest
    hostname: time_service
    depends_on:
      - broker
      - schema-registry
    links:
      - broker
      - schema-registry
    ports:
      - "8100:8100"
    environment:
      KAFKA_BROKER_URL: ${BROKER}
      SCHEMA_REGISTRY_URL: ${SCHEMA}
      AUTO_REGISTER_SCHEMAS: "false"
    restart: on-failure

  ost_db:
    profiles: ["ost"]
    image: postgres:9.6
    hostname: ost_db
    container_name: ost_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ktHo8mv7Xzq7nDN5YpLwfgDp3T2cPEY9nhooA6GE2ktz9jH8rLLTtNnT8UHgYvcUypDFuK2y
      POSTGRES_DB: TRIAL_ADMIN
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    restart: unless-stopped

  ost_api:
    image: drivereu/ost_backend:without_keycloak
    hostname: ost_api
    container_name: ost_api
    links:
      - ost_db
    ports:
      - "8080:8080"
    environment:
      - OST_DB_HOST=ost_db
      - OST_DB_PORT=5432
      - OST_DB_NAME=TRIAL_ADMIN
      - OST_DB_USER=postgres
      - OST_DB_PASSWORD=ktHo8mv7Xzq7nDN5YpLwfgDp3T2cPEY9nhooA6GE2ktz9jH8rLLTtNnT8UHgYvcUypDFuK2y
      - DRIVER_IS_TESTBED_ON=false
    restart: unless-stopped

  ost_web:
    image: drivereu/ost_frontend:without_keycloak
    hostname: ost_web
    container_name: ost_web
    links:
      - ost_db
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certificates:/usr/share/certificates
    restart: unless-stopped

volumes:
  trial-data:
  database-OST:
